{"version":3,"sources":["components/ContactItem/ContactItem.js","redux/types.js","redux/actions.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","contacts.js","redux/store.js","index.js"],"names":["ContactItem","name","number","className","defaultProps","types","ADD","DELETE","CHANGE_FILTER","type","payload","id","uuidv4","contactId","value","getFilteredContacts","contacts","filter","toLowerCase","includes","connect","dispatch","onClick","actions","map","ContactForm","state","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","props","onSubmit","reset","this","onChange","Component","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d922154b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactItem.scss'\r\n\r\nconst ContactItem = ({name,number}) => {\r\n    return (<>\r\n        <span className='contact-name'>{name}: </span>\r\n        <span className='contact-number'>{number}</span>\r\n    </>);\r\n};\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string\r\n}\r\n\r\nContactItem.defaultProps = {\r\n    name: \"Mickey Mouse\",\r\n    number: 123456789\r\n}\r\n\r\nexport default ContactItem","const types = {\r\n    ADD: 'phonebook/add',\r\n    DELETE: 'phonebook/delete',\r\n    CHANGE_FILTER: 'phonebook/changeFilter',\r\n};\r\n\r\nexport default types;","import types from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number\r\n    },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import React from 'react';\r\nimport ContactItem from '../ContactItem';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/base.scss'\r\nimport './ContactList.scss';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions'\r\n\r\nconst ContactsList = ({contacts, onClick}) => {\r\n    return (\r\n        <ul className='contact-list'>\r\n            {contacts.map(({id, name, number}) => {\r\n                return (<li key={id} className='contact-item'><ContactItem\r\n                    name={name}\r\n                    number={number} />\r\n                    <button type='button' onClick={()=>{onClick(id)}} className='button contact-item__button'>Delete</button>\r\n                </li>)\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nconst getFilteredContacts = (contacts, filter) => {\r\n    return contacts.filter(({name}) => {\r\n      return name.toLowerCase().includes(filter.toLowerCase())\r\n    })\r\n   };\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => ({\r\n  contacts: getFilteredContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.scss'\r\nimport '../styles/base.scss';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {\r\n       onSubmit: PropTypes.func.isRequired\r\n    };\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n      handleChange = (e) => {\r\n         this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.name, this.state.number);\r\n        this.reset();\r\n  };\r\n\r\n    reset() {\r\n        this.setState({ name: '', number: '' });\r\n  };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className='contacts-form'>\r\n                <label className='label'>\r\n                    Name<input\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        name=\"name\"\r\n                        className='input' />\r\n                </label>\r\n                <label className='label'>\r\n                    Number<input\r\n                        type=\"tel\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        name=\"number\"\r\n                    className='input'/>\r\n                </label>\r\n                <button type=\"submit\" className='button contacts-form__button'>Add contact</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/base.scss';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n        <label className='label'>\r\n            Find contact by name\r\n         <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n            className='input'/>\r\n        </label>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import './App.css';\nimport React from 'react';\nimport ContactsList from \"./components/ContactsList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\"\n\nconst App = () => (\n  <>\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactsList />\n  </>);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst contacts = [{ id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\r\n{ id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\r\n{ id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\r\n{ id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' }\r\n];\r\n\r\nexport default contacts","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contacts from '../contacts';\r\nimport types from './types';\r\n\r\nconst contactsList = (state = contacts, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  contacts: contactsList,\r\n  filter\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}