{"version":3,"sources":["components/ContactItem/ContactItem.js","redux/actions.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","contacts.js","redux/store.js","index.js"],"names":["ContactItem","name","number","className","defaultProps","addContact","createAction","payload","id","uuidv4","deleteContact","changeFilter","getFilteredContacts","contacts","filter","toLowerCase","includes","connect","dispatch","onClick","actions","map","type","ContactForm","state","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","onChange","Component","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","contactsReducer","createReducer","contact","filterReducer","_","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8c6f4d47.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactItem.scss'\r\n\r\nconst ContactItem = ({name,number}) => {\r\n    return (<>\r\n        <span className='contact-name'>{name}: </span>\r\n        <span className='contact-number'>{number}</span>\r\n    </>);\r\n};\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string\r\n}\r\n\r\nContactItem.defaultProps = {\r\n    name: \"Mickey Mouse\",\r\n    number: 123456789\r\n}\r\n\r\nexport default ContactItem","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('phonebook/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number\r\n  }\r\n}));\r\n\r\nconst deleteContact = createAction('phonebook/delete');\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n\r\n","import React from 'react';\r\nimport ContactItem from '../ContactItem';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/base.scss'\r\nimport './ContactList.scss';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions'\r\n\r\nconst ContactsList = ({contacts, onClick}) => {\r\n    return (\r\n        <ul className='contact-list'>\r\n            {contacts.map(({id, name, number}) => {\r\n                return (<li key={id} className='contact-item'><ContactItem\r\n                    name={name}\r\n                    number={number} />\r\n                    <button type='button' onClick={()=>{onClick(id)}} className='button contact-item__button'>Delete</button>\r\n                </li>)\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nconst getFilteredContacts = (contacts, filter) => {\r\n    return contacts.filter(({name}) => {\r\n      return name.toLowerCase().includes(filter.toLowerCase())\r\n    })\r\n   };\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => ({\r\n  contacts: getFilteredContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.scss'\r\nimport '../styles/base.scss';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {\r\n       onSubmit: PropTypes.func.isRequired\r\n    };\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n      handleChange = (e) => {\r\n         this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        if (name !== '' && number !== '') {\r\n             this.props.onSubmit(name, number);\r\n             this.reset();\r\n            return\r\n        };\r\n     alert ('Please fill empty fields')\r\n  };\r\n\r\n    reset() {\r\n        this.setState({ name: '', number: '' });\r\n  };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className='contacts-form'>\r\n                <label className='label'>\r\n                    Name<input\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        name=\"name\"\r\n                        className='input' />\r\n                </label>\r\n                <label className='label'>\r\n                    Number<input\r\n                        type=\"tel\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        name=\"number\"\r\n                    className='input'/>\r\n                </label>\r\n                <button type=\"submit\" className='button contacts-form__button'>Add contact</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/base.scss';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n        <label className='label'>\r\n            Find contact by name\r\n         <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n            className='input'/>\r\n        </label>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import './App.css';\nimport React from 'react';\nimport ContactsList from \"./components/ContactsList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\"\n\nconst App = () => (\n  <>\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactsList />\n  </>);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst contacts = [\r\n    { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\r\n    { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' }\r\n];\r\n\r\nexport default contacts","import contacts from '../contacts';\r\nimport { createReducer, configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsReducer = createReducer(contacts, {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    if (state.map(contact => contact.name).includes(payload.name)) {\r\n     return  alert (`${payload.name} is already exist`)\r\n    };\r\n         return [...state, payload]\r\n},\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.changeFilter]: (_, {payload}) => payload\r\n})\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer\r\n}));\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  })\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}